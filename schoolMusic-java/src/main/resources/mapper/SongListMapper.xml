<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.music.dao.SongListMapper">
    <resultMap id="BaseResultMap" type="com.javaclimb.music.domain.SongList" >
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="style" jdbcType="VARCHAR" property="style"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.javaclimb.music.domain.SongList" >
        <result column="style" jdbcType="VARCHAR" property="style"/>
        <result column="count" jdbcType="INTEGER" property="songListNum"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.javaclimb.music.domain.SongList" extends="BaseResultMap">
        <result column="introduction" jdbcType="LONGVARCHAR" property="introduction"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,pic,style
    </sql>

    <sql id="Blob_Column_List">
        id,title,pic,style,introduction
    </sql>

    <insert id="insert" parameterType="com.javaclimb.music.domain.SongList">
        insert into song_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="style != null">
                style,
            </if>
            create_time,
            state,
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="title != null">
                #{title},
            </if>
            <if test="pic != null">
                #{pic},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            <if test="style != null">
                #{style},
            </if>
            now(),
            1,
        </trim>
    </insert>

    <update id="update" parameterType="com.javaclimb.music.domain.SongList">
        update song_list
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="pic != null">
                pic = #{pic},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            <if test="style != null">
                style = #{style},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="delete" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update song_list
            set state = 0
            where id = #{item}
        </foreach>
    </update>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from song_list
        where id=#{id}
        and state = 1
    </select>

    <select id="allSongList" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Blob_Column_List"/>
        from song_list
        where state = 1
        <if test="arg0 != null and arg0 != ''">
            AND title like concat('%',#{arg0},'%')
        </if>
        <if test="arg1 != null and arg1 != ''">
            AND style = #{arg1}
        </if>
        order by create_time desc
    </select>

    <select id="songListOfTitle" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from song_list
        where title = #{title}
        and state = 1
    </select>

    <select id="likeTitle" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from song_list
        where title like #{title}
        and state = 1
    </select>

    <select id="likeStyle" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from song_list
        where style like #{style}
        and state = 1
    </select>

    <select id="allStyle" resultMap="BaseResultMap2" parameterType="java.lang.String">
        SELECT DISTINCT(style),COUNT(style) count FROM song_list
        where style != ''
        AND style != 'undefined'
        AND state = 1
        GROUP BY style
        ORDER BY COUNT(style) DESC
    </select>

</mapper>
