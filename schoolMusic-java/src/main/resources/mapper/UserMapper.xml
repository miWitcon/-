<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.music.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.javaclimb.music.domain.User" >
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="TINYINT" />
        <result column="phone_num" property="phoneNum" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="CHAR" />
        <result column="birth" property="birth" jdbcType="TIMESTAMP" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
        <result column="location" property="location" jdbcType="VARCHAR" />
        <result column="avator" property="avator" jdbcType="VARCHAR" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="school" property="school" jdbcType="VARCHAR" />
        <result column="identity" property="identity" jdbcType="TINYINT" />
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.javaclimb.music.domain.User">
        <result column="boynum" property="boyNum" jdbcType="VARCHAR" />
        <result column="girlnum" property="girlNum" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Base_Column_List">
        user_id, username, password, sex, phone_num, email, birth, introduction, location, avator, create_time, update_time, school, identity
    </sql>

    <insert id="insert" parameterType="com.javaclimb.music.domain.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="avator != null">
                avator,
            </if>
            create_time,update_time,
            <if test="school != null">
                school,
            </if>
            <if test="identity != null">
                identity,
            </if>
            state,
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="phoneNum != null">
                #{phoneNum},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="birth != null">
                #{birth},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
            <if test="location != null">
                #{location},
            </if>
            <if test="avator != null">
                #{avator},
            </if>
            now(),now(),
            <if test="school != null">
                #{school},
            </if>
            <if test="identity != null">
                #{identity},
            </if>
            1,
        </trim>
    </insert>

    <update id="update" parameterType="com.javaclimb.music.domain.User">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="introduction != null">
                introduction = #{introduction},
            </if>
            <if test="location != null">
                location = #{location},
            </if>
            <if test="avator != null">
                avator = #{avator},
            </if>
            update_time = now(),
            <if test="school != null">
                school = #{school},
            </if>
            <if test="identity != null">
                identity = #{identity},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <update id="delete" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update user
            set state = 0
            where user_id = #{item}
        </foreach>
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId}
        and state = 1
    </select>

    <select id="allUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where state = 1
        <if test="arg0 != null and arg0 != ''">
            AND username like concat('%',#{arg0},'%')
        </if>
        <if test="arg1 != null and arg1 != ''">
            AND phone_num = #{arg1}
        </if>
        <if test="arg2 != null and arg2 != ''">
            AND email = #{arg2}
        </if>
        order by update_time desc
    </select>

    <select id="verifyPassword" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*)
        from user
        where username = #{arg0} and password = #{arg1} and state = 1
    </select>

    <select id="verifyAdminPassword" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*)
        from user
        where username = #{arg0}
        and password = #{arg1}
        and identity = 1
        and state = 1
    </select>

    <select id="ifExistPhoneNum" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*) from user
        where phone_num = #{arg0}
        <if test="arg1 != null and arg1 != ''">
            and user_id != #{arg1}
        </if>
        and state = 1
    </select>

    <select id="ifExistEmail" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        select count(*) from user
        where email = #{arg0}
        <if test="arg1 != null and arg1 != ''">
            and user_id != #{arg1}
        </if>
        and state = 1
    </select>

    <select id="getByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{arg0}
        <if test="arg1 != null and arg1 != ''">
            and user_id != #{arg1}
        </if>
        and state = 1
    </select>

    <select id="sexRatio" resultMap="BaseResultMap2">
        SELECT
            sum( CASE WHEN sex = 1 THEN 1 ELSE 0 END ) boynum,
            sum( CASE WHEN sex = 0 THEN 1 ELSE 0 END ) girlnum
        FROM
        USER
        WHERE
            state = 1
    </select>

</mapper>
